#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/init_temp.el    

* Packages
** Initialize packages and package archives
Add all archives and make sure use-package is enabled.
#+begin_src emacs-lisp
(require 'package)


(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                         ("org" . "https://orgmode.org/elpa/")
                         ("elpa" . "https://elpa.gnu.org/packages/")
			   ( "jcs-elpa" . "https://jcs-emacs.github.io/jcs-elpa/packages/")))

(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))

(unless (package-installed-p 'use-package)
   (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)
#+end_src

* Basic GUI configuration
** The basics
Remove all unwanted GUI Elements.
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (menu-bar-mode -1)
  
  (setq visible-bell t)
  (setq ring-bell-function 'ignore) 
#+end_src

** Setup line numbers
Enable line numbers globally but disable for certain modes. 
#+begin_src emacs-lisp
  (set-fringe-mode 10)

  (column-number-mode)
  (global-display-line-numbers-mode t)

  (dolist (mode '(org-mode-hook
                term-mode-hook
		shell-mode-hook
                eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))
#+end_src

** Font settings
Set default fonts as well as fonts for fixed pitch and variable pitch.
#+begin_src emacs-lisp
(defvar na/default-font-size 120)
(set-face-attribute 'default nil :font "Fira Code Retina" :height na/default-font-size)

(set-face-attribute 'fixed-pitch nil :font "Fira Code Retina" :height na/default-font-size)

(set-face-attribute 'variable-pitch nil :font "Cantarell" :height na/default-font-size :weight 'regular)
#+end_src

* Org Mode
** Auto-tangle config on save
Enable org mode to automatically write source blocks to the correct config file on save.
#+begin_src emacs-lisp
  (defvar na/config-filename
    (cond ((eq system-type 'windows-nt) "c:/Users/NI0020/Projects/Emacs-Configuration/emacs.org")
          (t "~/Projects/Emacs-Configuration/emacs.org")))

  (defun na/org-babel-tangle-config ()
    (when (string-equal (buffer-file-name)
                        (expand-file-name na/config-filename))
           ;; Dynamic scoping to the rescue
           (let ((org-confirm-babel-evaluate nil))
             (org-babel-tangle))))

  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'na/org-babel-tangle-config)))
#+end_src
